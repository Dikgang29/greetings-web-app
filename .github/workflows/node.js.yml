# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

services:
  postgres:
    image: postgres:latest
    env: 
      POSTGRES_USER: <your_database_user>
      POSTGRES_PASSWORD: <your_password>
      POSTGRES_DB: <your_database_name>
    ports:
    - 5432:5432
    # Set health checks to wait until postgres has started
    options: >-
        --health-cmd pg_isready
        --health-interval 10s
        --health-timeout 5s
        --health-retries 5
    
steps:
- uses: actions/checkout@v3
- name: Install dependencies
  run: npm install
- name: create postgresql tables
  run: PGPASSWORD=<your_databse_password> psql -h localhost -U <your_databse_user> -d <your_databse_name> -a -f <path_to_sql_script eg - ./table.sql >
- name: run tests with postgresql
  run:
    npm test
  env:
    DATABASE_URL: <your_databse_connection_string>
